{
  "version": 3,
  "sources": ["../keystone.ts", "../src/keystone/schema.ts"],
  "sourcesContent": ["// Welcome to Keystone!\n//\n// This file is what Keystone uses as the entry-point to your headless backend\n//\n// Keystone imports the default export of this file, expecting a Keystone configuration object\n//   you can find out more at https://keystonejs.com/docs/apis/config\n\nimport { config } from '@keystone-6/core'\nimport { lists } from './src/keystone/schema'\n\nexport default config({\n  db: {\n    // we're using sqlite for the fastest startup experience\n    //   for more information on what database might be appropriate for you\n    //   see https://keystonejs.com/docs/guides/choosing-a-database#title\n    provider: 'sqlite',\n    url: 'file:./keystone.db',\n\n    // WARNING: this is only needed for our monorepo examples, dont do this\n    //   we use using myprisma, not .myprisma, because vite\n    prismaClientPath: 'node_modules/myprisma/client',\n  },\n  server: {\n    // We're using a custom port for this example so Astro and Keystone can run at the same time\n    port: 4000,\n  },\n  lists,\n})\n", "// Welcome to your schema\n//   Schema driven development is Keystone's modus operandi\n//\n// This file is where we define the lists, fields and hooks for our data.\n// If you want to learn more about how lists are configured, please read\n// - https://keystonejs.com/docs/config/lists\n\nimport { list } from '@keystone-6/core'\nimport { allowAll } from '@keystone-6/core/access'\n\n// see https://keystonejs.com/docs/fields/overview for the full list of fields\n//   this is a few common fields for an example\nimport { text, select } from '@keystone-6/core/fields'\n\n// if you want to make your own fields, see https://keystonejs.com/docs/guides/custom-fields\n\n// when using Typescript, you can refine your types to a stricter subset by importing\n// the generated types from '.keystone/types'\nimport type { Lists } from '.keystone/types'\n\nexport const lists = {\n  Post: list({\n    // WARNING\n    //   for this starter project, anyone can create, query, update and delete anything\n    //   if you want to prevent random people on the internet from accessing your data,\n    //   you can find out more at https://keystonejs.com/docs/guides/auth-and-access-control\n    access: {\n      operation: allowAll,\n      filter: {\n        query: ({ session }) => {\n          console.log('Post.access.filter session', session)\n\n          // if it is an Astro user, return posts where the user's browser is what the Post is written for\n          if (session?.user === 'astro' && session?.browser) {\n            return {\n              browser: { equals: session.browser },\n            }\n          }\n          return true\n        },\n      },\n    },\n\n    // this is the fields for our Post list\n    fields: {\n      title: text({ validation: { isRequired: true } }),\n      // we use this field to arbitrarily restrict Posts to only be viewed on a particular browser (using Post.access.filter)\n      browser: select({\n        options: [\n          { label: 'Chrome', value: 'chrome' },\n          { label: 'Firefox', value: 'firefox' },\n        ],\n        validation: { isRequired: true },\n      }),\n    },\n  }),\n} satisfies Lists\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,IAAAA,eAAuB;;;ACAvB,kBAAqB;AACrB,oBAAyB;AAIzB,oBAA6B;AAQtB,IAAM,QAAQ;AAAA,EACnB,UAAM,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA,IAKT,QAAQ;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN,OAAO,CAAC,EAAE,QAAQ,MAAM;AACtB,kBAAQ,IAAI,8BAA8B,OAAO;AAGjD,cAAI,SAAS,SAAS,WAAW,SAAS,SAAS;AACjD,mBAAO;AAAA,cACL,SAAS,EAAE,QAAQ,QAAQ,QAAQ;AAAA,YACrC;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA;AAAA,IAGA,QAAQ;AAAA,MACN,WAAO,oBAAK,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA;AAAA,MAEhD,aAAS,sBAAO;AAAA,QACd,SAAS;AAAA,UACP,EAAE,OAAO,UAAU,OAAO,SAAS;AAAA,UACnC,EAAE,OAAO,WAAW,OAAO,UAAU;AAAA,QACvC;AAAA,QACA,YAAY,EAAE,YAAY,KAAK;AAAA,MACjC,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACH;;;AD9CA,IAAO,uBAAQ,qBAAO;AAAA,EACpB,IAAI;AAAA;AAAA;AAAA;AAAA,IAIF,UAAU;AAAA,IACV,KAAK;AAAA;AAAA;AAAA,IAIL,kBAAkB;AAAA,EACpB;AAAA,EACA,QAAQ;AAAA;AAAA,IAEN,MAAM;AAAA,EACR;AAAA,EACA;AACF,CAAC;",
  "names": ["import_core"]
}
